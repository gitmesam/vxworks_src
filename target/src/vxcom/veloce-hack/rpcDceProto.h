/* rpcDceProto.h generated by WIDL Version 2.2.1 on 06-Dec-01 at 11:54:15 AM */

#include "comBase.h"

#ifndef __INCrpcDceProto_h
#define __INCrpcDceProto_h


#include "vxidl.h"

#ifdef __cplusplus
extern "C" {
#endif

int include_rpcDceProto (void);

#ifndef __IRpcDceTypes_FWD_DEFINED__
#define __IRpcDceTypes_FWD_DEFINED__
typedef interface IRpcDceTypes IRpcDceTypes;
#endif /* __IRpcDceTypes_FWD_DEFINED__ */

enum tagRPC_CN_TYPES
{
RPC_CN_PKT_REQUEST = 0,
RPC_CN_PKT_RESPONSE = 2,
RPC_CN_PKT_FAULT = 3,
RPC_CN_PKT_BIND = 11,
RPC_CN_PKT_BIND_ACK = 12,
RPC_CN_PKT_BIND_NAK = 13,
RPC_CN_PKT_ALTER_CONTEXT = 14,
RPC_CN_PKT_ALTER_CONTEXT_RESP = 15,
RPC_CN_PKT_AUTH3 = 16,
RPC_CN_PKT_SHUTDOWN = 17,
RPC_CN_PKT_REMOTE_ALERT = 18,
RPC_CN_PKT_ORPHANED = 19,
};

typedef enum tagRPC_CN_TYPES rpc_cn_types;

enum tagRPC_CN_FLAGS
{
RPC_CN_FLAGS_FIRST_FRAG = 1,
RPC_CN_FLAGS_LAST_FRAG = 2,
RPC_CN_FLAGS_ALERT_PENDING = 4,
RPC_CN_FLAGS_RESERVED1 = 8,
RPC_CN_FLAGS_CONCURRENT_MPX = 16,
RPC_CN_FLAGS_DID_NOT_EXECUTE = 32,
RPC_CN_FLAGS_MAYBE = 64,
RPC_CN_FLAGS_OBJECT_UUID = 128,
};

typedef enum tagRPC_CN_FLAGS rpc_cn_flags;

struct tagRpcCnCommonHdrT
{
BYTE rpcVersion;
BYTE rpcMinorVersion;
BYTE packetType;
BYTE flags;
BYTE drep[4];
USHORT fragLen;
USHORT authLen;
ULONG callId;
};

typedef struct tagRpcCnCommonHdrT rpc_cn_common_hdr_t;

struct tagRpcCnPresSyntaxIdT
{
GUID id;
ULONG version;
};

typedef struct tagRpcCnPresSyntaxIdT rpc_cn_pres_syntax_id_t;

#define MAX_AUTH_LEN		 	(512)
struct tagRpcCnAuthTlrT
{
BYTE authType;
BYTE authLevel;
BYTE stubPadLen;
BYTE reserved;
ULONG key;
BYTE authValue[512];
};

typedef struct tagRpcCnAuthTlrT rpc_cn_auth_tlr_t;

#define SIZEOF_AUTH_TLR_PREAMBLE	(8)
#define ALLOC_AUTH_TLR(n) new char [n+sizeof(rpc_cn_auth_tlr_t)]
#define FREE_AUTH_TLR(t) delete [] ((char*) t)
struct tagRpcCnPresCtxElemT
{
USHORT presCtxId;
BYTE nTransferSyntaxes;
BYTE reserved;
rpc_cn_pres_syntax_id_t abstractSyntax;
rpc_cn_pres_syntax_id_t transferSyntax[1];
};

typedef struct tagRpcCnPresCtxElemT rpc_cn_pres_ctx_elem_t;

struct tagRpcCnPresCtxListT
{
BYTE numCtxElems;
BYTE reserved;
USHORT reserved2;
rpc_cn_pres_ctx_elem_t presCtxElem[1];
};

typedef struct tagRpcCnPresCtxListT rpc_cn_pres_ctx_list_t;

struct tagRpcCnAuth3HdrT
{
rpc_cn_common_hdr_t hdr;
USHORT maxTxFrag;
USHORT maxRxFrag;
};

typedef struct tagRpcCnAuth3HdrT rpc_cn_auth3_hdr_t;

struct tagRpcCnBindHdrT
{
rpc_cn_common_hdr_t hdr;
USHORT maxTxFrag;
USHORT maxRxFrag;
ULONG assocGroupId;
rpc_cn_pres_ctx_list_t presCtxList;
};

typedef struct tagRpcCnBindHdrT rpc_cn_bind_hdr_t;

struct __anon38
{
USHORT len;
BYTE addr[6];
};

typedef struct __anon38 rpc_cn_port_any_t;

struct __anon39
{
USHORT result;
USHORT reason;
rpc_cn_pres_syntax_id_t transferSyntax;
};

typedef struct __anon39 rpc_cn_pres_result_t;

struct __anon40
{
BYTE numResults;
BYTE reserved;
USHORT reserved2;
rpc_cn_pres_result_t presResult[1];
};

typedef struct __anon40 rpc_cn_pres_result_list_t;

struct __anon41
{
rpc_cn_common_hdr_t hdr;
USHORT maxTxFrag;
USHORT maxRxFrag;
ULONG assocGroupId;
rpc_cn_port_any_t secAddr;
rpc_cn_pres_result_list_t resultList;
};

typedef struct __anon41 rpc_cn_bind_ack_hdr_t;

struct __anon42
{
rpc_cn_common_hdr_t hdr;
USHORT maxTxFrag;
USHORT maxRxFrag;
ULONG assocGroupId;
USHORT secAddr;
USHORT pad;
rpc_cn_pres_result_list_t resultList;
};

typedef struct __anon42 rpc_cn_alter_context_resp_hdr_t;

struct __anon43
{
rpc_cn_common_hdr_t hdr;
USHORT reason;
BYTE numProtocols;
BYTE verMajor;
BYTE verMinor;
};

typedef struct __anon43 rpc_cn_bind_nak_hdr_t;

struct __anon44
{
rpc_cn_common_hdr_t hdr;
ULONG allocHint;
USHORT presCtxId;
USHORT methodNum;
GUID objectId;
};

typedef struct __anon44 rpc_cn_request_hdr_t;

struct __anon45
{
rpc_cn_common_hdr_t hdr;
ULONG allocHint;
USHORT presCtxId;
BYTE alertCount;
BYTE reserved;
};

typedef struct __anon45 rpc_cn_response_hdr_t;

struct __anon46
{
rpc_cn_common_hdr_t hdr;
ULONG allocHint;
USHORT presCtxId;
BYTE alertCount;
BYTE reserved;
ULONG status;
ULONG reserved2;
};

typedef struct __anon46 rpc_cn_fault_hdr_t;

typedef rpc_cn_common_hdr_t rpc_cn_shutdown_hdr_t;

typedef rpc_cn_common_hdr_t rpc_cn_remote_alert_hdr_t;

typedef rpc_cn_common_hdr_t rpc_cn_orphaned_hdr_t;

typedef union tag_rpc_cn_packet_t
    {
    rpc_cn_request_hdr_t		request;
    rpc_cn_response_hdr_t		response;
    rpc_cn_bind_hdr_t		bind;
    rpc_cn_bind_ack_hdr_t		bind_ack;
    rpc_cn_bind_nak_hdr_t		bind_nak;
    rpc_cn_auth3_hdr_t		auth3;
    rpc_cn_fault_hdr_t		fault;
    rpc_cn_alter_context_resp_hdr_t	alter_context_resp;

    rpc_cn_shutdown_hdr_t		shutdown;
    rpc_cn_orphaned_hdr_t		orphaned;
    } rpc_cn_packet_t;
typedef struct
    {
    COM_VTBL_BEGIN
    COM_VTBL_END
    } IRpcDceTypesVtbl;

#ifdef __cplusplus

interface IRpcDceTypes {};

#else

/* C interface definition for IRpcDceTypes */

interface IRpcDceTypes
    {
    const IRpcDceTypesVtbl *  lpVtbl;
    };

#endif /* __cplusplus */

EXTERN_C const IID IID_IRpcDceTypes;

#ifdef __cplusplus
}
#endif



#endif /* __INCrpcDceProto_h */


